*whatsmissing.txt*	For Vim version 6.0.  


                	  VIM REFERENCE MANUAL 
                                by 
                     David Fishburn <dfishburn dot vim at gmail dot com>

	  	Whatsmissing plugin (WhatsMissing.vim) Manual
	  	    WhatsMissing.vim version 4.0

For instructions on installing this file, type
	:help add-local-help
|add-local-help| inside Vim.

Homepage: http://vim.sourceforge.net/script.php?script_id=1108

*WhatsMissing.vim* *whatsmissing* *whatsnotmissing* 

1.  Overview					|whatsmissing-overview|
2.  Installation				|whatsmissing-install|
3.  Commands    				|whatsmissing-commands|
4.  Functions     				|whatsmissing-functions|
5.  Options     				|whatsmissing-options|

{Vi does not have any of this}

------------------------------------------------------------------------------
What's New					*whatsmissing-new*

Version 4.00
    - Added a number of new or missing Vim Events
    - Converted to an autoload plugin
    - Correctly handled the cpo for 'a' and 'A'
    - Added a few more examples are more explicity defined which 
      is the source and target files from the WhatsMissing
      command line

Version 3.00
    - There was a logic error when prompting the user for the options.  
      Ignore case value was reversed.

Version 1.00
    - Initial Release
 
------------------------------------------------------------------------------
1. Overview					*whatsmissing-overview*

 This plugin contains functions/commands that will cycle through one 
 buffer (the source which is the current Vim buffer) and compare the its
 contents against the contents of another buffer (the target) which you 
 specify on the command.  In my example, the target buffer is my Vim 
 syntax file.  I will use this when I want to update my syntax file. 
 I will generate a new list of syntax items (which will mostly be identical 
 to the previous list except with some new entries.  Now I want to know 
 of this entire list, which words (or lines) are missing from my target 
 file (my Vim syntax file).  Now instead of 500 entries, I only have 15 
 which I need to update my syntax file with.

 Depending on the options specified and command chosen, it will open a split
 window (the result) and display either the entries that are:
    - missing from the target buffer
    or
    - contained in both buffers
    
 The plugin has created a menu, Plugin->WhatMissing.  There are two entries: >
     WhatsMissing
     WhatsNotMissing
<
 These menu items are also available in visual mode.  These menu items simply
 call the commands: >
     :WhatsMissing
     :WhatsNotMissing
<
 The commands will prompt the user for various options, see below in
 the |whatsmissing-commands| section.


------------------------------------------------------------------------------
2. Installation         			*whatsmissing-install*

 You can use this script as a plugin by copying it to your plugin directory. 
 See |add-global-plugin| for instructions.
 
 You can also |:source| it from your |.vimrc|.

 To install this help file |add-local-help| inside Vim.
 	:help add-local-help
	:helptags $VIM/vimfiles/doc (Windows)
	:helptags $VIM/.vim/doc     (Unix)


------------------------------------------------------------------------------
3. Commands             			*whatsmissing-commands*

 If no parameters are supplied to the WhatsMissing and WhatsNotMissing 
 commands, you will be prompted for all parameters.  This makes it very 
 easy to use the plugin.  If you wish to call these commands from scripts
 you can use the |call| syntax and supply all parameters (this will
 suppress the prompting). >
 
 WhatsMissing
<    Moves through the source buffer and checks to see if the entry exists 
     in the target buffer.  If it does *not*, then it is considered missing
     and the entry is added to the third buffer. >


 WhatsNotMissing
<    Moves through the source buffer and checks to see if the entry exists 
     in the target buffer.  If it *does *, then it is considered *not* missing
     and the entry is added to the third buffer.

>
 WMSetOption
<    There are several options which can control the behaviour of the plugin.
     WMSetOption supports command completion, so you can do the following: >
         :WMSetOption <Tab> 
<    
     If you repeatedly press the <Tab> button, it will cycle through the
     various options available.  Once an option is available, if you add
     and "=" sign, then you can also complete the values for the option: >
         :WMSetOption mode=<Tab>
<    
     Pressing <Tab> repeatedly will cycle through the values for this
     option.  >


 WMGetOption
<    This command will display the value of the option supplied.  Similar
     to WMSetOption, this command also supports the <Tab> completion. >
         :WMGetOption <Tab> 
         :WMGetOption mode
< 
     This command will display the value of the option: >
         :mode=word
<



------------------------------------------------------------------------------
4. Functions             			*whatsmissing-functions*

 There are four public functions available. >
 
 WhatsMissing [target buffer] [1 - Missing] [1 - Prompt for options] 
<    - The current buffer is the source buffer so this should be a buffer 
       with a list of words or lines which you want to check if they exist 
       in the target buffer. 
     - I typically use this for checking my syntax .vim files.  So, the source 
       buffer contains all the syntax elements and the target buffer is my 
       syntax/myfile.vim file. 
     - Optionally takes 3 parameters. >
        - 1st parameter - target buffer
<         Can be any of the following:
            - buffer #
            - buffer name
            - absolute / relative filename >
        - 2nd parameter - Missing or NOT
<         Can be: 
            - 1 = Check for items missing from the target buffer
            - 0 = Check for items NOT missing from the target buffer >
        - 3rd parameter - No Prompt
<         Can be: 
            - 1 = Prompt for all options
            - 0 = No prompting for options >
<    - Example calls: >
        :WhatsMissing syntax.sql
        :%call WhatsMissing('syntax.sql', 1, 1)
        :10,20call WhatsMissing('syntax.sql', 1, 0)
       

 WhatsNotMissing
<    Takes the same parameters as WhatsMissing, but sets the 2nd 
     parameter to 0.

>
 WM_SetOption
<    - Takes 1 parameter of the form: >
        option_name=option_value
<    - See |whatsmissing-options| for parameters.  
     - Example call: >
        :call WM_SetOption('ignore_case=1')
       

 WM_GetOption
<    - Takes 1 parameter of the form: >
        option_name
<    - See |whatsmissing-options| for parameters.  
     - Example call, note the use of echo, not call: >
        :echo WM_GetOption('ignore_case')
<

------------------------------------------------------------------------------
5. Options					*whatsmissing-options*

 The behavior of WhatsMissing.vim are governed by several options. Options
 can be specified using the WMSetOption command.  As mentioned above, the
 <Tab> button can be used for both option name and option value completion.

 You can check the value of a specific option by: >
     :WMGetOption option_name
< 
 Here are the various options: >
    mode  
<       - Values: "word" or "line".  
        - WhatsMissing will move through the source buffer one |word| at a
          time, and checks this value against the target buffer.  It will 
          also automatically escape the following characters: >
                '\\/.*$^~[]'
<         If the "line" mode is chosen the comparison between the source 
          and target buffer is performed a line at a time. >

    ignore_case 
<       - Values: "0" or "1".  
        - The "default" for WhatsMissing is to use the |'ignorecase'| option
          of the target buffer.  Otherwise the user is allowed to override
          it. >

    ignore_whitespace
<       - Values: "0" or "1".  
        - If in "line" mode, you can choose to ignore leading and trailing
          whitespace for the comparison. >

    debug
<       - Values: "0" or "1".  
        - Used internally to show search strings.


------------------------------------------------------------------------------
  vim:tw=78:fo=tcq2:ts=8:ft=help:norl:
